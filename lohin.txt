import React, { PureComponent } from 'react'
import { authLogin } from '../../store/actions/authActions';
import {
  Form, Icon, Input, Button,  Alert} from 'antd';
import {connect} from 'react-redux';
import { Redirect, withRouter} from 'react-router-dom';
import Background from '../../asset/images/bg-01.jpg'

class SignIn extends PureComponent {

    state = {
            username: '',
            password: ''
    }

        handleChange = (e) => {
            this.setState({
                    [e.target.id]: e.target.value
            })
        }

        handleSubmit = (e) => {
            e.preventDefault();

            this.props.onAuth(this.state.username, this.state.password)

            }

  render() {
          const { result } = this.props;
// console.log(result)
const {from} = this.props.location.state || {from : {pathname: '/'}}
    if(this.props.isAuthenticated === true){
    return (
      <Redirect to={from} />
    )
  }

// else {
  return (

    <div className="container-login100" style={{backgroundImage: `url(${Background})`}}>
        <div className="grid">

     <div className="column offset-4 column-4">
                 <Form onSubmit={this.handleSubmit} className="login-form">

<Form.Item>
<Input prefix={<Icon type="user"
style={{color: 'rgba(0,0,0,.25)'}}/>}
placeholder="Username"  id="username" onChange={this.handleChange} />

</Form.Item>

<Form.Item>
<Input prefix={<Icon type="lock"
style={{color: 'rgba(0,0,0,.25)'}}/>}
type="password" placeholder="Password" id="password" onChange={this.handleChange} />

</Form.Item>

<Form.Item>
<Button type="primary" htmlType="submit"
style={{marginRight: '10px'}}>Login</Button>
{/*or*/}
{/*<NavLink style={{marginRight: '10px'}} to="/signup/">*/}
{/*Signup*/}
{/*</NavLink>*/}
</Form.Item>

                 </Form>
     </div>
        </div>

 <div className="grid">

     <div className="column column-12">

     {  result.sending ? <Alert
          message="Error"
          description={result.message}
          type="error"
          showIcon
        /> : ''}

      </div>
 </div>

    </div>

  )
// }

  }
}

const mapStateToProps = (state)=>{
  // console.log(state)
  return {
     users: state.user.users,
      loading: state.auth.loading,
      error: state.auth.error,
        result: state.form.result,
  }
}
const mapDispatchToProps = dispatch => {
  return {
      onAuth: (username, password)=>dispatch(authLogin(username,password))
  }
}

export default withRouter(connect(mapStateToProps,mapDispatchToProps)(SignIn))
